@import "../../../../../../../../base/styles/theme.scss";

$multilineheight: 300px;

@each $key,
$value in $common-themes {
    .#{$key} {
        misr-templates-modal {
            .modal-wrapper {
                width: 100%;
                max-height: 70vh;
                position: relative;
                overflow-x: hidden;
                overflow-y: auto;
                display: flex;
                flex-direction: column;
                padding: 5px;
                .caption {
                    font-size: 1.1em;
                    background: getThemeColor(5, $key);
                    width: 100%;
                    display: block;
                    /* width: 160px; */
                    height: 32px;
                    line-height: 32px;
                    padding-left: 5px;
                    //width: 100%;

                }
                .p10 {
                    padding-left: 10px;
                }
                .border {
                    background: getThemeColor(3, $key);
                    border: 3px getThemeColor(5, $key) solid;
                    //padding: 5px;
                    //border: 1px #000 solid;
                    //padding: 15px;
                }
                .field-table {
                    td {
                        padding: 10px;
                        border-right: 1px getThemeColor(5, $key) solid;
                    }
                    td.last {
                        border: none;
                    }
                }
                .field-table-wrapper {
                    // padding: 10px;
                }
                //.padding-wrap {
                //    padding-left: 20px;
                //}
                .field-wrapper {
                    width: 100%;
                    margin-bottom: 5px;

                    .label {
                        display: inline-block;
                        width: 160px;
                        height: 32px;
                        line-height: 32px;
                        font-size: 1em;
                    }

                    > input {
                        display: inline-block;
                        width: calc(100% - 160px);
                    }

                    &.version-media, &.s2-width-auto {
                        .select2-wrapper {
                            width: auto;
                        }
                    }
                    .select2-wrapper {
                        display: inline-block;
                        width: calc(100% - 160px);
                        border: 2px solid getThemeColor(9, $key);
                        background: getThemeColor(4, $key);
                    }
                    .picker-wrap {
                        width: 150px;
                        display: inline-block;
                    }

                    &.schema {
                        margin-top: 10px;
                        padding-top: 5px;
                        border-top: 1px solid getThemeColor(9, $key);

                        .CodeMirror {
                            height: 400px !important;
                            line-height: normal;
                        }
                    }

                }
                .main-data {

                }
            }

            .overlay-wrapper {
                display: none;
                position: absolute;
                top: 0;
                bottom: 0;
                left: 0;
                right: 0;
                background: getThemeColor(3, $key);
                overflow: hidden;
                z-index: 5;

                .spinner {
                    width: 80px;
                    height: 80px;
                    border-width: 8px;
                    margin: 0 auto;
                    position: relative;
                    top: calc(50% - 40px);
                }
            }
        }

        .select-file-xml {
            height: 32px;
            line-height: 32px;
            float: left;
            overflow: hidden;
            width: 160px;
            position: relative;
            cursor: pointer;

            &:hover {
                button {
                    background: getThemeColor(12, $key);
                    opacity: 0.8;
                }
            }

            button {
                background: getThemeColor(12, $key);
                cursor: pointer;
            }

            input {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                opacity: 0;
                cursor: pointer;
            }
        }
    }
}
